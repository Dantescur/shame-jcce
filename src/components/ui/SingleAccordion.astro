---
interface Props {
  index: number;
  heading: string;
  body: string;
  points?: string[];
}

const { heading, body, points, index } = Astro.props;
---

<div
  class="hs-accordion"
  id=`hs-basic-with-title-and-arrow-stretched-heading-${index + 1}`
>
  <button
    class="hs-accordion-toggle hs-accordion-active:text-blue-600 py-3 inline-flex items-center justify-between gap-x-3 w-full font-semibold text-start text-gray-800 hover:text-gray-500 rounded-lg disabled:opacity-50 disabled:pointer-events-none"
    aria-expanded="false"
    aria-controls=`hs-basic-with-title-and-arrow-stretched-collapse-${index + 1}`
  >
    {heading}
    <svg
      class="hs-accordion-active:hidden block size-4"
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
    >
      <path d="m6 9 6 6 6-6"></path>
    </svg>
    <svg
      class="hs-accordion-active:block hidden size-4"
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
    >
      <path d="m18 15-6-6-6 6"></path>
    </svg>
  </button>
  <div
    id=`hs-basic-with-title-and-arrow-stretched-collapse-${index + 1}`
    class="hs-accordion-content hidden w-full overflow-hidden transition-[height] duration-300"
    role="region"
    aria-labelledby=`hs-basic-with-title-and-arrow-stretched-heading-${index + 1}`
  >
    <p class="text-gray-800">
      {body}
      <ul>
        {points && points.map((point) => <li>{point}</li>)}
      </ul>
    </p>
  </div>
</div>
